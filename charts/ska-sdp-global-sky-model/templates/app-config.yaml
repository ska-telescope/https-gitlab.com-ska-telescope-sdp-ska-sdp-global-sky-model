kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: {{ .Chart.Name }}
spec:
  storageClassName: {{ .Values.volume.storageClassName }}
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: {{ .Values.volume.size }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Chart.Name }}
  labels:
{{ include "ska-sdp-global-sky-model.labels" . | indent 4 }}
    app.kubernetes.io/name: {{ .Chart.Name }}
spec:
  selector:
    app.kubernetes.io/name: {{ .Chart.Name }}
{{ include "ska-sdp-global-sky-model.labels" . | indent 4 }}
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Chart.Name }}
{{ include "ska-sdp-global-sky-model.labels" . | indent 6 }}
  template:
    metadata:
      labels:
{{ include "ska-sdp-global-sky-model.labels" . | indent 8 }}
        app.kubernetes.io/name: {{ .Chart.Name }}
    spec:
      containers:
      - name: {{ .Chart.Name }}-api
        image: "{{ .Values.api.repository }}:{{ .Values.api.tag }}"
        imagePullPolicy: {{ .Values.api.pullPolicy }}
        ports:
        - containerPort: 80
        env:
        - name: API_VERBOSE
          value: "{{ .Values.env.verbose }}"
        - name: API_BASE_PATH
          value: "{{ include "ska-sdp-global-sky-model.ingress_path_prepend" . }}/global-sky-model/"
        - name: DATASET_ROOT
          value: /datasets
        - name: TMDATA_SOURCE
          value: "{{ .Values.env.tmdata_source }}"
        - name: TMDATA_KEYS
          value: "{{ .Values.env.tmdata_keys }}"
        - name: NSIDE
          value: "{{ .Values.env.nside }}"
        volumeMounts:
        - mountPath: /datasets
          name: data
        startupProbe:
          httpGet:
            path: /ping
            port: 80
          initialDelaySeconds: 5
          failureThreshold: 30
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /ping
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 60
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: {{ .Chart.Name }}