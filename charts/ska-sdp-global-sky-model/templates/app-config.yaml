# Configure a ClusterIP service that will give us internal acess to the api.
apiVersion: v1
kind: Service
metadata:
  name: {{ .Chart.Name }}-api-service
  labels:
{{ include "ska-sdp-global-sky-model.labels" . | indent 4 }}
    app.kubernetes.io/name: {{ .Chart.Name }}-api
spec:
  selector:
    app.kubernetes.io/name: {{ .Chart.Name }}-api
{{ include "ska-sdp-global-sky-model.labels" . | indent 4 }}
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP

---

# Configure a deployment for the api
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}-api
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Chart.Name }}-api
{{ include "ska-sdp-global-sky-model.labels" . | indent 6 }}
  template:
    metadata:
      labels:
{{ include "ska-sdp-global-sky-model.labels" . | indent 8 }}
        app.kubernetes.io/name: {{ .Chart.Name }}-api
    spec:
      containers:
      - name: {{ .Chart.Name }}-api
        image: "{{ .Values.api.repository }}:{{ .Values.api.tag }}"
        imagePullPolicy: {{ .Values.api.pullPolicy }}
        env:
          - name: DB_USER
            valueFrom:
              secretKeyRef:
                name: {{ .Chart.Name }}-db-credentials
                key: user
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Chart.Name }}-db-credentials
                key: password
          - name: DB
            value: "{{ .Chart.Name }}-db-service"
        ports:
        - containerPort: 80