# Configure a ClusterIP service that will give us internal acess to the api.
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-api
  labels:
    service: {{ .Release.Name }}-api
spec:
  selector:
    app: {{ .Release.Name }}-api
  ports:
  - port: 80

---

# Configure a deployment for the api
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-api
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-api
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-api
    spec:
      containers:
      - name: {{ .Chart.Name }}-api
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
          - name: DB_USER
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-db-credentials
                key: user
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-db-credentials
                key: password
        ports:
        - containerPort: 80
---

apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-fast-api-service
spec:
  selector:
    app: {{ .Release.Name }}-api
  ports:
  - port: {{ .Values.loadbalancerservice.port }}
    targetPort: {{ .Values.loadbalancerservice.targetPort }}
  type: {{ .Values.loadbalancerservice.type }}